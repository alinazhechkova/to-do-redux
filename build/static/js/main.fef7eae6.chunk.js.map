{"version":3,"sources":["components/AddToDo/index.tsx","components/ToDoItem/index.tsx","components/ToDoList/index.tsx","App.tsx","store/store.tsx","index.tsx"],"names":["AddToDo","useState","name","setName","add","useStoreActions","actions","newItem","id","Math","floor","random","completed","onSubmit","e","preventDefault","trim","className","onInput","target","value","type","ToDoItem","item","check","deleteItem","delete","onClick","ToDoList","todoList","useStoreState","state","map","App","store","createStore","action","push","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAmCeA,EA9BC,WAAO,IAAD,EACIC,mBAAS,IADb,mBACbC,EADa,KACPC,EADO,KAEdC,EAAMC,aAA4B,SAACC,GAAD,OAAaA,EAAQF,OACvDG,EAAoB,CACxBC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBT,OACAU,WAAW,GAeb,OACE,uBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEb,EAAKc,SACPZ,EAAIG,GACJJ,EAAQ,MAKoBc,UAAU,gBAAxC,UACE,uBAAOC,QAdS,SAACJ,GACnBX,EAAQW,EAAEK,OAAOC,QAacA,MAAOlB,EAAMe,UAAU,mBACpD,wBAAQI,KAAK,SAASJ,UAAU,kBAAhC,qBCCSK,G,MArBE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KACZC,EAAQnB,aAA4B,SAACC,GAAD,OAAaA,EAAQkB,SACzDC,EAAapB,aAA4B,SAACC,GAAD,OAAaA,EAAQoB,UAEpE,OACE,sBAAKT,UAAS,oBAAeM,EAAKX,UAAY,YAAc,IAA5D,UACE,oBAAIK,UAAU,aAAd,SAA4BM,EAAKrB,OACjC,sBAAKe,UAAU,gBAAf,UACE,uBACEI,KAAK,WACLJ,UAAU,aACVU,QAAS,kBAAMH,EAAMD,EAAKf,OAE5B,wBAAQmB,QAAS,kBAAMF,EAAWF,EAAKf,KAAKS,UAAU,cAAtD,uBCDOW,G,MAdE,WACf,IAAMC,EAAWC,aAA0B,SAACC,GAAD,OAAWA,EAAMF,YAE5D,OACE,qBAAKZ,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACCY,EAASG,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKf,cCH3ByB,MARf,WACE,OACE,qBAAKhB,UAAU,MAAf,SACE,cAAC,EAAD,OCkBSiB,EAtBDC,YAAwB,CACpCN,SAAU,GAEVL,MAAOY,aAAO,SAACL,EAAOvB,GACpBuB,EAAMF,SAASG,KAAI,SAACT,GAClB,OAAIA,EAAKf,KAAOA,GACde,EAAKX,WAAaW,EAAKX,UAChBW,GAEFA,QAIXnB,IAAKgC,aAAO,SAACL,EAAOR,GAClBQ,EAAMF,SAASQ,KAAKd,MAGtBG,OAAQU,aAAO,SAACL,EAAOvB,GACrBuB,EAAMF,SAAWE,EAAMF,SAASS,QAAO,SAACf,GAAD,OAAUA,EAAKf,KAAOA,UCfjE+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeP,MAAOA,EAAtB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.fef7eae6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StoreModel, ToDoType } from \"../../store/models\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport \"./AddToDo.scss\";\r\n\r\nconst AddToDo = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const add = useStoreActions<StoreModel>((actions) => actions.add);\r\n  const newItem: ToDoType = {\r\n    id: Math.floor(Math.random() * 100),\r\n    name,\r\n    completed: false,\r\n  };\r\n\r\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (name.trim()) {\r\n      add(newItem);\r\n      setName(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"add-todo-form\">\r\n      <input onInput={handleInput} value={name} className=\"add-todo-input\" />\r\n      <button type=\"submit\" className=\"add-todo-button\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default AddToDo;\r\n","import React from \"react\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport \"./ToDoItem.scss\";\r\nimport { StoreModel, ToDoType } from \"../../store/models\";\r\n\r\ninterface Props {\r\n  item: ToDoType;\r\n}\r\n\r\nconst ToDoItem = ({ item }: Props) => {\r\n  const check = useStoreActions<StoreModel>((actions) => actions.check);\r\n  const deleteItem = useStoreActions<StoreModel>((actions) => actions.delete);\r\n\r\n  return (\r\n    <div className={`todo-item ${item.completed ? \"completed\" : \"\"}`}>\r\n      <h3 className=\"todo-title\">{item.name}</h3>\r\n      <div className=\"todo-controls\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"todo-check\"\r\n          onClick={() => check(item.id)}\r\n        />\r\n        <button onClick={() => deleteItem(item.id)} className=\"todo-delete\">\r\n          X\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoItem;\r\n","import React from \"react\";\r\nimport AddToDo from \"../AddToDo\";\r\nimport ToDoItem from \"../ToDoItem\";\r\nimport { useStoreState } from \"easy-peasy\";\r\nimport \"./ToDoList.scss\";\r\nimport { StoreModel } from \"../../store/models\";\r\n\r\nconst ToDoList = () => {\r\n  const todoList = useStoreState<StoreModel>((state) => state.todoList);\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <div className=\"container\">\r\n        <AddToDo />\r\n        {todoList.map((item: any) => (\r\n          <ToDoItem item={item} key={item.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ToDoList;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport ToDoList from \"./components/ToDoList\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ToDoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, action } from \"easy-peasy\";\r\nimport { StoreModel } from \"./models\";\r\n\r\nconst store = createStore<StoreModel>({\r\n  todoList: [],\r\n\r\n  check: action((state, id) => {\r\n    state.todoList.map((item) => {\r\n      if (item.id === id) {\r\n        item.completed = !item.completed;\r\n        return item;\r\n      }\r\n      return item;\r\n    });\r\n  }),\r\n\r\n  add: action((state, item) => {\r\n    state.todoList.push(item);\r\n  }),\r\n\r\n  delete: action((state, id) => {\r\n    state.todoList = state.todoList.filter((item) => item.id !== id);\r\n  }),\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { StoreProvider } from \"easy-peasy\";\r\nimport store from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StoreProvider store={store}>\r\n      <App />\r\n    </StoreProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}